"use strict";var precacheConfig=[["/index.html","f904af7cf9c2d321812863737904beec"],["/static/css/main.2a0f724d.css","cfc2e132a9fd0c7870e468c947cb7d1b"],["/static/js/main.a3f2154b.js","8214dfe08a1537ccabf4c3ec51401a4a"],["/static/media/logo.5d5d9eef.svg","5d5d9eefa31e5e13a6610d9fa7a283bb"],["/static/media/sourcesanspro-bold-webfont.03aa1937.ttf","03aa193733c31e3c6d3cfb553b4ae3c0"],["/static/media/sourcesanspro-bold-webfont.0c2efd35.woff","0c2efd35c8f2c5ea68dd1e3707f73db9"],["/static/media/sourcesanspro-bold-webfont.1d33bc98.eot","1d33bc98c80337922e4f59ef76802c35"],["/static/media/sourcesanspro-it-webfont.43a33101.woff","43a3310179da53e409e39cbf2e388412"],["/static/media/sourcesanspro-it-webfont.4a3b23e7.eot","4a3b23e71c8d5aad5fe9b14085cc8d55"],["/static/media/sourcesanspro-it-webfont.ceb387c2.ttf","ceb387c218a39446ba113ea2470aeba7"],["/static/media/sourcesanspro-light-webfont.3f41d6c1.woff","3f41d6c186427709683c3bbb75ce3c20"],["/static/media/sourcesanspro-light-webfont.72d25b5d.ttf","72d25b5d21f2fbbe28dc69ac4437c436"],["/static/media/sourcesanspro-light-webfont.cdc845ab.eot","cdc845ab864b4024c6caccad6a9351e8"],["/static/media/sourcesanspro-regular-webfont.37de6070.ttf","37de6070cd48f259ae503e99eac02bae"],["/static/media/sourcesanspro-regular-webfont.397d7a74.woff","397d7a749dceb04e9bda6fb446abf71a"],["/static/media/sourcesanspro-regular-webfont.60dbfe1d.eot","60dbfe1d59046612f8d810d261197803"],["/static/media/sourcesanspro-semibold-webfont.1ea2589c.woff","1ea2589cbe488394a6c73a72f32808c0"],["/static/media/sourcesanspro-semibold-webfont.9bc0106a.ttf","9bc0106adda4bbcd5f7d418da05e51d1"],["/static/media/sourcesanspro-semibold-webfont.edde799c.eot","edde799cbf4d8d4ef6845ccacf3306ae"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var r="/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(r,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});